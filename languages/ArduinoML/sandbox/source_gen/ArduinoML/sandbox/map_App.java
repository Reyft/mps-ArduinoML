package ArduinoML.sandbox;

/*Generated by MPS */


public class map_App {

  public static void main(String[] args) {
    System.out.println("//Code generated by ArduinoML");
    System.out.println("void setup() {");
    System.out.println("  pinMode(" + 12 + ", OUTPUT);");
    System.out.println("  pinMode(" + 8 + ", INPUT);");
    System.out.println("}");

    System.out.println("\n// Behavorial concepts");
    System.out.println("long time = 0; long debounce = 200;\n");

    System.out.println("// Here comes the states declarations");
    System.out.print("void state_" + "off" + "() {\n");
    System.out.println("  digitalWrite(" + 12 + ", " + "LOW" + ");");
    System.out.println("  boolean guard = millis() - time > debounce;");
    System.out.println("  if (digitalRead(" + 8 + ") == " + "HIGH" + " && guard ) {");
    System.out.print("    time = millis(); state_" + "on" + "();\n");
    System.out.println("  } else {\n    state_" + "off" + "();\n  }");
    System.out.println("}\n");
    System.out.print("void state_" + "on" + "() {\n");
    System.out.println("  digitalWrite(" + 12 + ", " + "HIGH" + ");");
    System.out.println("  boolean guard = millis() - time > debounce;");
    System.out.println("  if (digitalRead(" + 8 + ") == " + "HIGH" + " && guard ) {");
    System.out.print("    time = millis(); state_" + "off" + "();\n");
    System.out.println("  } else {\n    state_" + "on" + "();\n  }");
    System.out.println("}\n");

    System.out.println("\nvoid loop() { state_" + "off" + "(); } // Entering init state\n");
  }
}
